/* Scale in the key of 1/10000 */

/*
   These are periods -- if you delay this long,
   then toggle the speaker pin, you'll get approximate
   pitches.

   This is the 16-bit version.  The pitches get less accurate
   as they get higher, but not as bad as the 8-bit one.

   "x" denotes sharp.

   Can be generated by Python:

import math
scale = ['C', 'Cx', 'D', 'Dx', 'E', 'F', 'Fx', 'G', 'Gx', 'A', 'Ax', 'B']

def octave(baseLength):
   periods = [baseLength / math.exp(x*math.log(2)/12) for x in range(0, 12)]
   periods = [int(round(x)) for x in periods]
   return( zip(scale, periods) )

for i in range(0,4):
   for note, period in octave(10000 / 2**i):
       if period < 65500:
     noteString = note + str(i)
     print "#define  {:<5}{:>6}".format(noteString, 2 * period)
*/


#define  C0    20000
#define  Cx0   18878
#define  D0    17818
#define  Dx0   16818
#define  E0    15874
#define  F0    14984
#define  Fx0   14142
#define  G0    13348
#define  Gx0   12600
#define  A0    11892
#define  Ax0   11224
#define  B0    10594
#define  C1    10000
#define  Cx1    9438
#define  D1     8908
#define  Dx1    8408
#define  E1     7938
#define  F1     7492
#define  Fx1    7072
#define  G1     6674
#define  Gx1    6300
#define  A1     5946
#define  Ax1    5612
#define  B1     5298
#define  C2     5000
#define  Cx2    4720
#define  D2     4454
#define  Dx2    4204
#define  E2     3968
#define  F2     3746
#define  Fx2    3536
#define  G2     3338
#define  Gx2    3150
#define  A2     2974
#define  Ax2    2806
#define  B2     2648
#define  C3     2500
#define  Cx3    2360
#define  D3     2228
#define  Dx3    2102
#define  E3     1984
#define  F3     1872
#define  Fx3    1768
#define  G3     1668
#define  Gx3    1574
#define  A3     1486
#define  Ax3    1404
#define  B3     1324
